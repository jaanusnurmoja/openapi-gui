openapi: "3.0.0"
info:
  version: 1.0.0
  title: Kordused
  license:
    name: MIT
servers:
  - url: http://localhost:8080/kordused/v3
paths:
  /mainDatas:
    get:
      summary: List all pets
      operationId: listMainData
      tags:
        - main
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: An paged array of main data
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/MainDatas"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a main data
      operationId: createPets
      tags:
        - main
      responses:
        201:
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /mainDatas/{id}:
    get:
      summary: Info for a specific data
      operationId: showMainDataById
      tags:
        - main
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the data to retrieve
          schema:
            type: string
      responses:
        200:
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MainData"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    MainData:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        locations:
          $ref: "#/components/schemas/Locations"
        collections:
          $ref: "#/components/schemas/Collections"
    MainDatas:
      type: array
      items:
        $ref: "#/components/schemas/MainData"
    Location:
      type: object
      properties:
        id:
          type: integer
          format: int64
        mainData:
          $ref: "#/components/schemas/MainData"
        name:
          type: string
    Locations:
      type: array
      items:
        $ref: "#/components/schemas/Location"
    Collection:
      type: object
      properties:
        id:
          type: integer
          format: int64
        mainData:
          $ref: "#/components/schemas/MainData"
        heading:
          type: string
        items:
          $ref: "#/components/schemas/Items"
    Collections:
      type: array
      items:
        $ref: "#/components/schemas/Collection"
    Item:
      type: object
      properties:
        id:
          type: integer
          format: int64
        collection:
          $ref: "#/components/schemas/Collection"
        title:
          type: string
        year:
          type: string
          format: date-time
        description:
          type: string
    Items:
      type: array
      items:
        $ref: "#/components/schemas/Item"
    One:
      type: object
      required:
        - id
        - title
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        twos:
          $ref: "#/components/schemas/Twos"
        created:
          type: string
          format: date-time
        modified:
          type: string
          format: date-time
    Ones:
      type: array
      items:
        $ref: "#/components/schemas/One"
    Two:
      type: object
      required:
        - id
        - title
      properties:
        id:
          type: integer
          format: int64
        one:
          $ref: "#/components/schemas/One"
        title:
          type: string
        threes:
          $ref: "#/components/schemas/Threes"
        created:
          type: string
          format: date-time
        modified:
          type: string
          format: date-time
    Twos:
      type: array
      items:
        $ref: "#/components/schemas/Two"
    Three:
      type: object
      required:
        - id
        - title
      properties:
        id:
          type: integer
          format: int64
        two:
           $ref: "#/components/schemas/Two"
        title:
          type: string
        fours:
          $ref: "#/components/schemas/Fours"
        created:
          type: string
          format: date-time
        modified:
          type: string
          format: date-time
    Threes:
      type: array
      items:
        $ref: "#/components/schemas/Three"
    Four:
      type: object
      required:
        - id
        - title
      properties:
        id:
          type: integer
          format: int64
        three:
           $ref: "#/components/schemas/Three"
        title:
          type: string
        fives:
          $ref: "#/components/schemas/Fives"
        created:
          type: string
          format: date-time
        modified:
          type: string
          format: date-time
    Fours:
      type: array
      items:
        $ref: "#/components/schemas/Four"        
    Five:
      type: object
      required:
        - id
        - title
      properties:
        id:
          type: integer
          format: int64
        four:
           $ref: "#/components/schemas/Four"
        title:
          type: string
        created:
          type: string
          format: date-time
        modified:
          type: string
          format: date-time
    Fives:
      type: array
      items:
        $ref: "#/components/schemas/Five"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string